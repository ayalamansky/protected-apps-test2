id: search_kyc
type: datasource
subtype: SqlQueryUnified
resourceName: managed_db
template:
  ordered:
    - queryRefreshTime: ''
    - records: ''
    - lastReceivedFromResourceAt: null
    - databasePasswordOverride: ''
    - queryDisabledMessage: ''
    - successMessage: ''
    - queryDisabled: ''
    - playgroundQuerySaveId: latest
    - resourceNameOverride: ''
    - runWhenModelUpdates: true
    - showFailureToaster: true
    - query: "SELECT\n  *\nFROM\n  kyc_cases\n  JOIN (\n    SELECT\n      *\n    FROM\n      accounts\n    WHERE\n    \tkyc_status != 'escalated'\n  ) accounts ON accounts.id = kyc_cases.account_id \nWHERE\n  kyc_cases.account_id:: text ilike {{ '%' + textinput7.value + '%' }}\n  AND ( \n    {{ !daterangepicker1.startValue }}\n    OR\n    submitted_date BETWEEN {{ daterangepicker1.startValue }} AND {{ daterangepicker1.endValue }}\n  )"
    - playgroundQueryUuid: ''
    - playgroundQueryId: null
    - privateParams: []
    - triggersOnSuccess: []
    - runWhenPageLoadsDelay: ''
    - warningCodes: []
    - data: null
    - recordId: ''
    - importedQueryInputs:
        ordered: []
    - showSuccessConfetti: false
    - isImported: false
    - showSuccessToaster: true
    - dataArray: []
    - cacheKeyTtl: ''
    - filterBy: ''
    - databaseHostOverride: ''
    - metadata: null
    - editorMode: sql
    - actionType: ''
    - triggersOnFailure: []
    - changesetObject: ''
    - shouldUseLegacySql: false
    - errorTransformer: >-
        // The variable 'data' allows you to reference the request's data in the
        transformer. 

        // example: return data.find(element => element.isError)

        return data.error
    - databaseNameOverride: ''
    - confirmationMessage: null
    - isFetching: false
    - changeset: ''
    - rawData: null
    - queryTriggerDelay: '0'
    - watchedParams: []
    - enableErrorTransformer: false
    - enableBulkUpdates: false
    - showLatestVersionUpdatedWarning: false
    - timestamp: 0
    - importedQueryDefaults:
        ordered: []
    - enableTransformer: false
    - showUpdateSetValueDynamicallyToggle: false
    - bulkUpdatePrimaryKey: ''
    - runWhenPageLoads: false
    - transformer: >-
        // type your code here

        // example: return formatDataAsArray(data).filter(row => row.quantity >
        20)

        return data
    - events:
        - ordered:
            - event: success
            - type: script
            - method: run
            - pluginId: ''
            - params:
                ordered:
                  - src: |-
                      table4.selectRow(null)
                      modal4.close()
            - waitType: debounce
            - waitMs: '0'
    - tableName: ''
    - queryTimeout: '10000'
    - requireConfirmation: false
    - queryFailureConditions: ''
    - changesetIsObject: false
    - enableCaching: false
    - allowedGroups: []
    - databaseUsernameOverride: ''
    - shouldEnableBatchQuerying: false
    - doNotThrowOnNoOp: false
    - queryThrottleTime: '750'
    - updateSetValueDynamically: true
    - notificationDuration: ''
createdAt: 2021-06-10T17:49:15.168Z
